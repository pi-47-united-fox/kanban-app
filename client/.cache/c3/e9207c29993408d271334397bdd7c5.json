{"id":"node_modules/yargs/lib/command.js","dependencies":[{"name":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\package.json","includedInParent":true,"mtime":1602227136123},{"name":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\package.json","includedInParent":true,"mtime":1602227114287},{"name":"path","loc":{"line":1,"column":21},"parent":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\lib\\command.js","resolved":"C:\\Users\\reyand oneil\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\path-browserify\\index.js"},{"name":"util","loc":{"line":2,"column":24},"parent":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\lib\\command.js","resolved":"C:\\Users\\reyand oneil\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\util\\util.js"},{"name":"camelcase","loc":{"line":3,"column":26},"parent":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\lib\\command.js","resolved":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\node_modules\\camelcase\\index.js"},{"name":"require-directory","loc":{"line":113,"column":12},"parent":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\lib\\command.js","resolved":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\require-directory\\index.js"},{"name":"which-module","loc":{"line":119,"column":24},"parent":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\lib\\command.js","resolved":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\which-module\\index.js"}],"generated":{"js":"const path = require('path')\nconst inspect = require('util').inspect\nconst camelCase = require('camelcase')\n\nconst DEFAULT_MARKER = '*'\n\n// handles parsing positional arguments,\n// and populating argv with said positional\n// arguments.\nmodule.exports = function (yargs, usage, validation) {\n  const self = {}\n\n  var handlers = {}\n  var aliasMap = {}\n  var defaultCommand\n  self.addHandler = function (cmd, description, builder, handler) {\n    var aliases = []\n    if (Array.isArray(cmd)) {\n      aliases = cmd.slice(1)\n      cmd = cmd[0]\n    } else if (typeof cmd === 'object') {\n      var command = (Array.isArray(cmd.command) || typeof cmd.command === 'string') ? cmd.command : moduleName(cmd)\n      if (cmd.aliases) command = [].concat(command).concat(cmd.aliases)\n      self.addHandler(command, extractDesc(cmd), cmd.builder, cmd.handler)\n      return\n    }\n\n    // allow a module to be provided instead of separate builder and handler\n    if (typeof builder === 'object' && builder.builder && typeof builder.handler === 'function') {\n      self.addHandler([cmd].concat(aliases), description, builder.builder, builder.handler)\n      return\n    }\n\n    // parse positionals out of cmd string\n    var parsedCommand = self.parseCommand(cmd)\n\n    // remove positional args from aliases only\n    aliases = aliases.map(function (alias) {\n      return self.parseCommand(alias).cmd\n    })\n\n    // check for default and filter out '*''\n    var isDefault = false\n    var parsedAliases = [parsedCommand.cmd].concat(aliases).filter(function (c) {\n      if (c === DEFAULT_MARKER) {\n        isDefault = true\n        return false\n      }\n      return true\n    })\n\n    // short-circuit if default with no aliases\n    if (isDefault && parsedAliases.length === 0) {\n      defaultCommand = {\n        original: cmd.replace(DEFAULT_MARKER, '').trim(),\n        handler: handler,\n        builder: builder || {},\n        demanded: parsedCommand.demanded,\n        optional: parsedCommand.optional\n      }\n      return\n    }\n\n    // shift cmd and aliases after filtering out '*'\n    if (isDefault) {\n      parsedCommand.cmd = parsedAliases[0]\n      aliases = parsedAliases.slice(1)\n      cmd = cmd.replace(DEFAULT_MARKER, parsedCommand.cmd)\n    }\n\n    // populate aliasMap\n    aliases.forEach(function (alias) {\n      aliasMap[alias] = parsedCommand.cmd\n    })\n\n    if (description !== false) {\n      usage.command(cmd, description, isDefault, aliases)\n    }\n\n    handlers[parsedCommand.cmd] = {\n      original: cmd,\n      handler: handler,\n      builder: builder || {},\n      demanded: parsedCommand.demanded,\n      optional: parsedCommand.optional\n    }\n\n    if (isDefault) defaultCommand = handlers[parsedCommand.cmd]\n  }\n\n  self.addDirectory = function (dir, context, req, callerFile, opts) {\n    opts = opts || {}\n    // disable recursion to support nested directories of subcommands\n    if (typeof opts.recurse !== 'boolean') opts.recurse = false\n    // exclude 'json', 'coffee' from require-directory defaults\n    if (!Array.isArray(opts.extensions)) opts.extensions = ['js']\n    // allow consumer to define their own visitor function\n    const parentVisit = typeof opts.visit === 'function' ? opts.visit : function (o) { return o }\n    // call addHandler via visitor function\n    opts.visit = function (obj, joined, filename) {\n      const visited = parentVisit(obj, joined, filename)\n      // allow consumer to skip modules with their own visitor\n      if (visited) {\n        // check for cyclic reference\n        // each command file path should only be seen once per execution\n        if (~context.files.indexOf(joined)) return visited\n        // keep track of visited files in context.files\n        context.files.push(joined)\n        self.addHandler(visited)\n      }\n      return visited\n    }\n    require('require-directory')({ require: req, filename: callerFile }, dir, opts)\n  }\n\n  // lookup module object from require()d command and derive name\n  // if module was not require()d and no name given, throw error\n  function moduleName (obj) {\n    const mod = require('which-module')(obj)\n    if (!mod) throw new Error('No command name given for module: ' + inspect(obj))\n    return commandFromFilename(mod.filename)\n  }\n\n  // derive command name from filename\n  function commandFromFilename (filename) {\n    return path.basename(filename, path.extname(filename))\n  }\n\n  function extractDesc (obj) {\n    for (var keys = ['describe', 'description', 'desc'], i = 0, l = keys.length, test; i < l; i++) {\n      test = obj[keys[i]]\n      if (typeof test === 'string' || typeof test === 'boolean') return test\n    }\n    return false\n  }\n\n  self.parseCommand = function (cmd) {\n    var extraSpacesStrippedCommand = cmd.replace(/\\s{2,}/g, ' ')\n    var splitCommand = extraSpacesStrippedCommand.split(/\\s+(?![^[]*]|[^<]*>)/)\n    var bregex = /\\.*[\\][<>]/g\n    var parsedCommand = {\n      cmd: (splitCommand.shift()).replace(bregex, ''),\n      demanded: [],\n      optional: []\n    }\n    splitCommand.forEach(function (cmd, i) {\n      var variadic = false\n      cmd = cmd.replace(/\\s/g, '')\n      if (/\\.+[\\]>]/.test(cmd) && i === splitCommand.length - 1) variadic = true\n      if (/^\\[/.test(cmd)) {\n        parsedCommand.optional.push({\n          cmd: cmd.replace(bregex, '').split('|'),\n          variadic: variadic\n        })\n      } else {\n        parsedCommand.demanded.push({\n          cmd: cmd.replace(bregex, '').split('|'),\n          variadic: variadic\n        })\n      }\n    })\n    return parsedCommand\n  }\n\n  self.getCommands = function () {\n    return Object.keys(handlers).concat(Object.keys(aliasMap))\n  }\n\n  self.getCommandHandlers = function () {\n    return handlers\n  }\n\n  self.hasDefaultCommand = function () {\n    return !!defaultCommand\n  }\n\n  self.runCommand = function (command, yargs, parsed) {\n    var aliases = parsed.aliases\n    var commandHandler = handlers[command] || handlers[aliasMap[command]] || defaultCommand\n    var currentContext = yargs.getContext()\n    var numFiles = currentContext.files.length\n    var parentCommands = currentContext.commands.slice()\n\n    // what does yargs look like after the buidler is run?\n    var innerArgv = parsed.argv\n    var innerYargs = null\n    var positionalMap = {}\n\n    if (command) currentContext.commands.push(command)\n    if (typeof commandHandler.builder === 'function') {\n      // a function can be provided, which builds\n      // up a yargs chain and possibly returns it.\n      innerYargs = commandHandler.builder(yargs.reset(parsed.aliases))\n      // if the builder function did not yet parse argv with reset yargs\n      // and did not explicitly set a usage() string, then apply the\n      // original command string as usage() for consistent behavior with\n      // options object below.\n      if (yargs.parsed === false) {\n        if (typeof yargs.getUsageInstance().getUsage() === 'undefined') {\n          yargs.usage('$0 ' + (parentCommands.length ? parentCommands.join(' ') + ' ' : '') + commandHandler.original)\n        }\n        innerArgv = innerYargs ? innerYargs._parseArgs(null, null, true) : yargs._parseArgs(null, null, true)\n      } else {\n        innerArgv = yargs.parsed.argv\n      }\n\n      if (innerYargs && yargs.parsed === false) aliases = innerYargs.parsed.aliases\n      else aliases = yargs.parsed.aliases\n    } else if (typeof commandHandler.builder === 'object') {\n      // as a short hand, an object can instead be provided, specifying\n      // the options that a command takes.\n      innerYargs = yargs.reset(parsed.aliases)\n      innerYargs.usage('$0 ' + (parentCommands.length ? parentCommands.join(' ') + ' ' : '') + commandHandler.original)\n      Object.keys(commandHandler.builder).forEach(function (key) {\n        innerYargs.option(key, commandHandler.builder[key])\n      })\n      innerArgv = innerYargs._parseArgs(null, null, true)\n      aliases = innerYargs.parsed.aliases\n    }\n\n    if (!yargs._hasOutput()) {\n      positionalMap = populatePositionals(commandHandler, innerArgv, currentContext, yargs)\n    }\n\n    // we apply validation post-hoc, so that custom\n    // checks get passed populated positional arguments.\n    if (!yargs._hasOutput()) yargs._runValidation(innerArgv, aliases, positionalMap, yargs.parsed.error)\n\n    if (commandHandler.handler && !yargs._hasOutput()) {\n      yargs._setHasOutput()\n      commandHandler.handler(innerArgv)\n    }\n\n    if (command) currentContext.commands.pop()\n    numFiles = currentContext.files.length - numFiles\n    if (numFiles > 0) currentContext.files.splice(numFiles * -1, numFiles)\n\n    return innerArgv\n  }\n\n  // transcribe all positional arguments \"command <foo> <bar> [apple]\"\n  // onto argv.\n  function populatePositionals (commandHandler, argv, context, yargs) {\n    argv._ = argv._.slice(context.commands.length) // nuke the current commands\n    var demanded = commandHandler.demanded.slice(0)\n    var optional = commandHandler.optional.slice(0)\n    var positionalMap = {}\n\n    validation.positionalCount(demanded.length, argv._.length)\n\n    while (demanded.length) {\n      var demand = demanded.shift()\n      populatePositional(demand, argv, yargs, positionalMap)\n    }\n\n    while (optional.length) {\n      var maybe = optional.shift()\n      populatePositional(maybe, argv, yargs, positionalMap)\n    }\n\n    argv._ = context.commands.concat(argv._)\n    return positionalMap\n  }\n\n  // populate a single positional argument and its\n  // aliases onto argv.\n  function populatePositional (positional, argv, yargs, positionalMap) {\n    // \"positional\" consists of the positional.cmd, an array representing\n    // the positional's name and aliases, and positional.variadic\n    // indicating whether or not it is a variadic array.\n    var variadics = null\n    var value = null\n    for (var i = 0, cmd; (cmd = positional.cmd[i]) !== undefined; i++) {\n      if (positional.variadic) {\n        if (variadics) argv[cmd] = variadics.slice(0)\n        else argv[cmd] = variadics = argv._.splice(0)\n      } else {\n        if (!value && !argv._.length) continue\n        if (value) argv[cmd] = value\n        else argv[cmd] = value = argv._.shift()\n      }\n      positionalMap[cmd] = true\n      postProcessPositional(yargs, argv, cmd)\n      addCamelCaseExpansions(argv, cmd)\n    }\n  }\n\n  // TODO move positional arg logic to yargs-parser and remove this duplication\n  function postProcessPositional (yargs, argv, key) {\n    var coerce = yargs.getOptions().coerce[key]\n    if (typeof coerce === 'function') {\n      try {\n        argv[key] = coerce(argv[key])\n      } catch (err) {\n        yargs.getUsageInstance().fail(err.message, err)\n      }\n    }\n  }\n\n  function addCamelCaseExpansions (argv, option) {\n    if (/-/.test(option)) {\n      const cc = camelCase(option)\n      if (typeof argv[option] === 'object') argv[cc] = argv[option].slice(0)\n      else argv[cc] = argv[option]\n    }\n  }\n\n  self.reset = function () {\n    handlers = {}\n    aliasMap = {}\n    defaultCommand = undefined\n    return self\n  }\n\n  // used by yargs.parse() to freeze\n  // the state of commands such that\n  // we can apply .parse() multiple times\n  // with the same yargs instance.\n  var frozen\n  self.freeze = function () {\n    frozen = {}\n    frozen.handlers = handlers\n    frozen.aliasMap = aliasMap\n    frozen.defaultCommand = defaultCommand\n  }\n  self.unfreeze = function () {\n    handlers = frozen.handlers\n    aliasMap = frozen.aliasMap\n    defaultCommand = frozen.defaultCommand\n    frozen = undefined\n  }\n\n  return self\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/yargs/lib/command.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}}],"sources":{"node_modules/yargs/lib/command.js":"const path = require('path')\nconst inspect = require('util').inspect\nconst camelCase = require('camelcase')\n\nconst DEFAULT_MARKER = '*'\n\n// handles parsing positional arguments,\n// and populating argv with said positional\n// arguments.\nmodule.exports = function (yargs, usage, validation) {\n  const self = {}\n\n  var handlers = {}\n  var aliasMap = {}\n  var defaultCommand\n  self.addHandler = function (cmd, description, builder, handler) {\n    var aliases = []\n    if (Array.isArray(cmd)) {\n      aliases = cmd.slice(1)\n      cmd = cmd[0]\n    } else if (typeof cmd === 'object') {\n      var command = (Array.isArray(cmd.command) || typeof cmd.command === 'string') ? cmd.command : moduleName(cmd)\n      if (cmd.aliases) command = [].concat(command).concat(cmd.aliases)\n      self.addHandler(command, extractDesc(cmd), cmd.builder, cmd.handler)\n      return\n    }\n\n    // allow a module to be provided instead of separate builder and handler\n    if (typeof builder === 'object' && builder.builder && typeof builder.handler === 'function') {\n      self.addHandler([cmd].concat(aliases), description, builder.builder, builder.handler)\n      return\n    }\n\n    // parse positionals out of cmd string\n    var parsedCommand = self.parseCommand(cmd)\n\n    // remove positional args from aliases only\n    aliases = aliases.map(function (alias) {\n      return self.parseCommand(alias).cmd\n    })\n\n    // check for default and filter out '*''\n    var isDefault = false\n    var parsedAliases = [parsedCommand.cmd].concat(aliases).filter(function (c) {\n      if (c === DEFAULT_MARKER) {\n        isDefault = true\n        return false\n      }\n      return true\n    })\n\n    // short-circuit if default with no aliases\n    if (isDefault && parsedAliases.length === 0) {\n      defaultCommand = {\n        original: cmd.replace(DEFAULT_MARKER, '').trim(),\n        handler: handler,\n        builder: builder || {},\n        demanded: parsedCommand.demanded,\n        optional: parsedCommand.optional\n      }\n      return\n    }\n\n    // shift cmd and aliases after filtering out '*'\n    if (isDefault) {\n      parsedCommand.cmd = parsedAliases[0]\n      aliases = parsedAliases.slice(1)\n      cmd = cmd.replace(DEFAULT_MARKER, parsedCommand.cmd)\n    }\n\n    // populate aliasMap\n    aliases.forEach(function (alias) {\n      aliasMap[alias] = parsedCommand.cmd\n    })\n\n    if (description !== false) {\n      usage.command(cmd, description, isDefault, aliases)\n    }\n\n    handlers[parsedCommand.cmd] = {\n      original: cmd,\n      handler: handler,\n      builder: builder || {},\n      demanded: parsedCommand.demanded,\n      optional: parsedCommand.optional\n    }\n\n    if (isDefault) defaultCommand = handlers[parsedCommand.cmd]\n  }\n\n  self.addDirectory = function (dir, context, req, callerFile, opts) {\n    opts = opts || {}\n    // disable recursion to support nested directories of subcommands\n    if (typeof opts.recurse !== 'boolean') opts.recurse = false\n    // exclude 'json', 'coffee' from require-directory defaults\n    if (!Array.isArray(opts.extensions)) opts.extensions = ['js']\n    // allow consumer to define their own visitor function\n    const parentVisit = typeof opts.visit === 'function' ? opts.visit : function (o) { return o }\n    // call addHandler via visitor function\n    opts.visit = function (obj, joined, filename) {\n      const visited = parentVisit(obj, joined, filename)\n      // allow consumer to skip modules with their own visitor\n      if (visited) {\n        // check for cyclic reference\n        // each command file path should only be seen once per execution\n        if (~context.files.indexOf(joined)) return visited\n        // keep track of visited files in context.files\n        context.files.push(joined)\n        self.addHandler(visited)\n      }\n      return visited\n    }\n    require('require-directory')({ require: req, filename: callerFile }, dir, opts)\n  }\n\n  // lookup module object from require()d command and derive name\n  // if module was not require()d and no name given, throw error\n  function moduleName (obj) {\n    const mod = require('which-module')(obj)\n    if (!mod) throw new Error('No command name given for module: ' + inspect(obj))\n    return commandFromFilename(mod.filename)\n  }\n\n  // derive command name from filename\n  function commandFromFilename (filename) {\n    return path.basename(filename, path.extname(filename))\n  }\n\n  function extractDesc (obj) {\n    for (var keys = ['describe', 'description', 'desc'], i = 0, l = keys.length, test; i < l; i++) {\n      test = obj[keys[i]]\n      if (typeof test === 'string' || typeof test === 'boolean') return test\n    }\n    return false\n  }\n\n  self.parseCommand = function (cmd) {\n    var extraSpacesStrippedCommand = cmd.replace(/\\s{2,}/g, ' ')\n    var splitCommand = extraSpacesStrippedCommand.split(/\\s+(?![^[]*]|[^<]*>)/)\n    var bregex = /\\.*[\\][<>]/g\n    var parsedCommand = {\n      cmd: (splitCommand.shift()).replace(bregex, ''),\n      demanded: [],\n      optional: []\n    }\n    splitCommand.forEach(function (cmd, i) {\n      var variadic = false\n      cmd = cmd.replace(/\\s/g, '')\n      if (/\\.+[\\]>]/.test(cmd) && i === splitCommand.length - 1) variadic = true\n      if (/^\\[/.test(cmd)) {\n        parsedCommand.optional.push({\n          cmd: cmd.replace(bregex, '').split('|'),\n          variadic: variadic\n        })\n      } else {\n        parsedCommand.demanded.push({\n          cmd: cmd.replace(bregex, '').split('|'),\n          variadic: variadic\n        })\n      }\n    })\n    return parsedCommand\n  }\n\n  self.getCommands = function () {\n    return Object.keys(handlers).concat(Object.keys(aliasMap))\n  }\n\n  self.getCommandHandlers = function () {\n    return handlers\n  }\n\n  self.hasDefaultCommand = function () {\n    return !!defaultCommand\n  }\n\n  self.runCommand = function (command, yargs, parsed) {\n    var aliases = parsed.aliases\n    var commandHandler = handlers[command] || handlers[aliasMap[command]] || defaultCommand\n    var currentContext = yargs.getContext()\n    var numFiles = currentContext.files.length\n    var parentCommands = currentContext.commands.slice()\n\n    // what does yargs look like after the buidler is run?\n    var innerArgv = parsed.argv\n    var innerYargs = null\n    var positionalMap = {}\n\n    if (command) currentContext.commands.push(command)\n    if (typeof commandHandler.builder === 'function') {\n      // a function can be provided, which builds\n      // up a yargs chain and possibly returns it.\n      innerYargs = commandHandler.builder(yargs.reset(parsed.aliases))\n      // if the builder function did not yet parse argv with reset yargs\n      // and did not explicitly set a usage() string, then apply the\n      // original command string as usage() for consistent behavior with\n      // options object below.\n      if (yargs.parsed === false) {\n        if (typeof yargs.getUsageInstance().getUsage() === 'undefined') {\n          yargs.usage('$0 ' + (parentCommands.length ? parentCommands.join(' ') + ' ' : '') + commandHandler.original)\n        }\n        innerArgv = innerYargs ? innerYargs._parseArgs(null, null, true) : yargs._parseArgs(null, null, true)\n      } else {\n        innerArgv = yargs.parsed.argv\n      }\n\n      if (innerYargs && yargs.parsed === false) aliases = innerYargs.parsed.aliases\n      else aliases = yargs.parsed.aliases\n    } else if (typeof commandHandler.builder === 'object') {\n      // as a short hand, an object can instead be provided, specifying\n      // the options that a command takes.\n      innerYargs = yargs.reset(parsed.aliases)\n      innerYargs.usage('$0 ' + (parentCommands.length ? parentCommands.join(' ') + ' ' : '') + commandHandler.original)\n      Object.keys(commandHandler.builder).forEach(function (key) {\n        innerYargs.option(key, commandHandler.builder[key])\n      })\n      innerArgv = innerYargs._parseArgs(null, null, true)\n      aliases = innerYargs.parsed.aliases\n    }\n\n    if (!yargs._hasOutput()) {\n      positionalMap = populatePositionals(commandHandler, innerArgv, currentContext, yargs)\n    }\n\n    // we apply validation post-hoc, so that custom\n    // checks get passed populated positional arguments.\n    if (!yargs._hasOutput()) yargs._runValidation(innerArgv, aliases, positionalMap, yargs.parsed.error)\n\n    if (commandHandler.handler && !yargs._hasOutput()) {\n      yargs._setHasOutput()\n      commandHandler.handler(innerArgv)\n    }\n\n    if (command) currentContext.commands.pop()\n    numFiles = currentContext.files.length - numFiles\n    if (numFiles > 0) currentContext.files.splice(numFiles * -1, numFiles)\n\n    return innerArgv\n  }\n\n  // transcribe all positional arguments \"command <foo> <bar> [apple]\"\n  // onto argv.\n  function populatePositionals (commandHandler, argv, context, yargs) {\n    argv._ = argv._.slice(context.commands.length) // nuke the current commands\n    var demanded = commandHandler.demanded.slice(0)\n    var optional = commandHandler.optional.slice(0)\n    var positionalMap = {}\n\n    validation.positionalCount(demanded.length, argv._.length)\n\n    while (demanded.length) {\n      var demand = demanded.shift()\n      populatePositional(demand, argv, yargs, positionalMap)\n    }\n\n    while (optional.length) {\n      var maybe = optional.shift()\n      populatePositional(maybe, argv, yargs, positionalMap)\n    }\n\n    argv._ = context.commands.concat(argv._)\n    return positionalMap\n  }\n\n  // populate a single positional argument and its\n  // aliases onto argv.\n  function populatePositional (positional, argv, yargs, positionalMap) {\n    // \"positional\" consists of the positional.cmd, an array representing\n    // the positional's name and aliases, and positional.variadic\n    // indicating whether or not it is a variadic array.\n    var variadics = null\n    var value = null\n    for (var i = 0, cmd; (cmd = positional.cmd[i]) !== undefined; i++) {\n      if (positional.variadic) {\n        if (variadics) argv[cmd] = variadics.slice(0)\n        else argv[cmd] = variadics = argv._.splice(0)\n      } else {\n        if (!value && !argv._.length) continue\n        if (value) argv[cmd] = value\n        else argv[cmd] = value = argv._.shift()\n      }\n      positionalMap[cmd] = true\n      postProcessPositional(yargs, argv, cmd)\n      addCamelCaseExpansions(argv, cmd)\n    }\n  }\n\n  // TODO move positional arg logic to yargs-parser and remove this duplication\n  function postProcessPositional (yargs, argv, key) {\n    var coerce = yargs.getOptions().coerce[key]\n    if (typeof coerce === 'function') {\n      try {\n        argv[key] = coerce(argv[key])\n      } catch (err) {\n        yargs.getUsageInstance().fail(err.message, err)\n      }\n    }\n  }\n\n  function addCamelCaseExpansions (argv, option) {\n    if (/-/.test(option)) {\n      const cc = camelCase(option)\n      if (typeof argv[option] === 'object') argv[cc] = argv[option].slice(0)\n      else argv[cc] = argv[option]\n    }\n  }\n\n  self.reset = function () {\n    handlers = {}\n    aliasMap = {}\n    defaultCommand = undefined\n    return self\n  }\n\n  // used by yargs.parse() to freeze\n  // the state of commands such that\n  // we can apply .parse() multiple times\n  // with the same yargs instance.\n  var frozen\n  self.freeze = function () {\n    frozen = {}\n    frozen.handlers = handlers\n    frozen.aliasMap = aliasMap\n    frozen.defaultCommand = defaultCommand\n  }\n  self.unfreeze = function () {\n    handlers = frozen.handlers\n    aliasMap = frozen.aliasMap\n    defaultCommand = frozen.defaultCommand\n    frozen = undefined\n  }\n\n  return self\n}\n"},"lineCount":335}},"error":null,"hash":"cbc6162115938031e23cf022b3637d8b","cacheData":{"env":{}}}