{"id":"node_modules/yargs/index.js","dependencies":[{"name":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\package.json","includedInParent":true,"mtime":1602227136123},{"name":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\package.json","includedInParent":true,"mtime":1602227114287},{"name":"./yargs","loc":{"line":4,"column":22},"parent":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\index.js","resolved":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\yargs.js"},{"name":"process","parent":"C:\\Users\\reyand oneil\\Documents\\phase2\\week-5\\kanban-app\\client\\node_modules\\yargs\\index.js","resolved":"C:\\Users\\reyand oneil\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n// classic singleton yargs API, to use yargs\n// without running as a singleton do:\n// require('yargs/yargs')(process.argv.slice(2))\nconst yargs = require('./yargs')\n\nArgv(process.argv.slice(2))\n\nmodule.exports = Argv\n\nfunction Argv (processArgs, cwd) {\n  const argv = yargs(processArgs, cwd, require)\n  singletonify(argv)\n  return argv\n}\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n    require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n    require('yargs').argv\n    to get a parsed version of process.argv.\n*/\nfunction singletonify (inst) {\n  Object.keys(inst).forEach(function (key) {\n    if (key === 'argv') {\n      Argv.__defineGetter__(key, inst.__lookupGetter__(key))\n    } else {\n      Argv[key] = typeof inst[key] === 'function' ? inst[key].bind(inst) : inst[key]\n    }\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/yargs/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/yargs/index.js":"// classic singleton yargs API, to use yargs\n// without running as a singleton do:\n// require('yargs/yargs')(process.argv.slice(2))\nconst yargs = require('./yargs')\n\nArgv(process.argv.slice(2))\n\nmodule.exports = Argv\n\nfunction Argv (processArgs, cwd) {\n  const argv = yargs(processArgs, cwd, require)\n  singletonify(argv)\n  return argv\n}\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n    require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n    require('yargs').argv\n    to get a parsed version of process.argv.\n*/\nfunction singletonify (inst) {\n  Object.keys(inst).forEach(function (key) {\n    if (key === 'argv') {\n      Argv.__defineGetter__(key, inst.__lookupGetter__(key))\n    } else {\n      Argv[key] = typeof inst[key] === 'function' ? inst[key].bind(inst) : inst[key]\n    }\n  })\n}\n"},"lineCount":33}},"error":null,"hash":"70812c8dafb79c1778f81a1af6dd6719","cacheData":{"env":{}}}